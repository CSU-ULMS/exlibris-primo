{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Exlibris-primo","body":"= Exlibris::Primo\r\n{<img src=\"https://secure.travis-ci.org/scotdalton/exlibris-primo.png\" alt=\"Build Status\" />}[https://secure.travis-ci.org/scotdalton/exlibris-primo]\r\n{<img src=\"https://gemnasium.com/scotdalton/exlibris-primo.png\" alt=\"Dependency Status\" />}[https://gemnasium.com/scotdalton/exlibris-primo]\r\n{<img src=\"https://codeclimate.com/badge.png\" />}[https://codeclimate.com/github/scotdalton/exlibris-primo]\r\n\r\nExlibris::Primo offers a set of libraries for interacting with the ExLibris Primo APIs.\r\n\r\n== Exlibris::Primo::Searcher\r\nThe Exlibris::Primo::Searcher class performs a search against Primo for given parameters\r\nand exposes the set of holdings (availibrary elements), rsrcs, tocs, and related links (addlink elements).\r\n\r\n=== Example of Exlibris::Primo::Searcher in action\r\n  setup = {\r\n    :base_url => \"http://primo.institution.edu\", :vid => \"VID\", :institution => \"INSTITUTION\",\r\n    :config => {\r\n      \"libraries\" => \r\n        {\"library_code1\" => \"library_display_1\", \"library_code2\" => \"library_display_1\"}, \r\n      \"statuses\" => \r\n        {\"status_code1\" => \"status_display_1\", \"status_code2\" => \"status_display_2\"}}\r\n  }\r\n  params = {\r\n     :primo_id => primo_id,\r\n     :isbn => isbn, \r\n     :issn => issn,\r\n     :title => title,\r\n     :author => author,\r\n     :genre => genre\r\n  }\r\n  searcher = Exlibris::Primo::Searcher.new(setup, params)\r\n  count = search.count\r\n  holdings = searcher.holdings\r\n  rsrcs = searcher.rsrcs\r\n  tocs = searcher.tocs\r\n  related_links = searcher.related_links\r\n\r\n== Exlibris::Primo::Record\r\nThe Exlibris::Primo::Record class creates an object representation of a Primo record for given parameters\r\nand exposes the record's primary attributes (format, title, author, url, openurl) and full record Xml (raw_xml)\r\nas instance variables.\r\n\r\n=== Example of Exlibris::Primo::Record in action\r\n  setup = { \r\n    :base_url => \"http://primo.institution.edu\", \r\n    :resolver_base_url => \"http://resolver.institution.edu\", \r\n    :vid => \"VID\", \r\n    :institution => \"DEFAULT\", \r\n    :record_id => \"PrimoRecordId\" \r\n  }\r\n  record = Exlibris::Primo::Record.new(setup)\r\n  raw_xml = record.instance_variable_get(:@raw_xml)\r\n  record_hash = record.to_h\r\n  openurl = record_hash[\"openurl\"]\r\n\t\r\n== Exlibris::Primo::EShelf\r\nThe Exlibris::Primo::EShelf class provides methods for reading a given user's Primo eshelf and eshelf structure as well as adding and removing records.\r\n\r\n=== Example of Exlibris::Primo::EShelf in action\r\n  setup = { \r\n    :base_url => \"http://primo.institution.edu\", \r\n    :vid => \"VID\", \r\n    :resolver_base_url => \"http://resolver.institution.edu\"\r\n  }\r\n  eshelf = Exlibris::Primo::EShelf.new(setup, \"USER_ID\", \"PRIMO\")\r\n  records = eshelf.records\r\n  p records.first.class\r\n  record_count = eshelf.count\r\n  basket_id = eshelf.basket_id\r\n  eshelf.add_records([\"PrimoRecordId\",\"PrimoRecordId2\"], basket_id)\r\n","tagline":"Library to work with Exlibris' Primo discovery system.","google":""}