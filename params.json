{"tagline":"Library to work with Exlibris' Primo discovery system.","body":"# Exlibris::Primo\r\n[![Build Status](https://secure.travis-ci.org/scotdalton/exlibris-primo.png)](https://secure.travis-ci.org/scotdalton/exlibris-primo)\r\n[![Dependency Status](https://gemnasium.com/scotdalton/exlibris-primo.png)](https://gemnasium.com/scotdalton/exlibris-primo)\r\n[![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/scotdalton/exlibris-primo)\r\n\r\nExlibris::Primo offers a set of classes for interacting with the ExLibris Primo APIs.\r\n\r\n## Exlibris::Primo::Search\r\nThe Exlibris::Primo::Search class performs a search against Primo for given parameters\r\nand exposes the set of holdings, fulltext links, table of contents links, and related links for each record retrieved.\r\n\r\n### Example of Exlibris::Primo::Search in action\r\nSearch can search by a query\r\n\r\n    search = Exlibris::Primo::Search.new(:base_url => \"http://primo.institution.edu\",\r\n      :institution => \"INSTITUTION\", :page_size => \"20\")\r\n    search.add_query_term \"0143039008\", \"isbn\", \"exact\"\r\n    count = search.size #=> 20+ (assuming there are 20+ records with this isbn)\r\n    facets = search.facets #=> Array of Primo facets\r\n    records = search.records #=> Array of Primo records\r\n    records.size #=> 20 (assuming there are 20+ records with this isbn)\r\n    records.each do |record_id, record|\r\n      holdings = record.holdings #=> Array of Primo holdings\r\n      fulltexts = record.fulltexts #=> Array of Primo full texts\r\n      table_of_contents = record.table_of_contents #=> Array of Primo tables of contents\r\n      related_links = record.related_links #=> Array of Primo related links\r\n    end\r\n\r\nOr by a given record id\r\n\r\n    search = Exlibris::Primo::Search.new(:base_url => \"http://primo.institution.edu\",\r\n      :institution => \"INSTITUTION\")\r\n    search.record_id! \"aleph0123456789\"\r\n    count = search.size #=> 1\r\n    records = search.records #=> Array of Primo records\r\n    records.size #=> 1\r\n    record = records.first #=> Primo record\r\n    holdings = record.holdings #=> Array of Primo holdings\r\n    fulltexts = record.fulltexts #=> Array of Primo full texts\r\n    table_of_contents = record.table_of_contents #=> Array of Primo tables of contents\r\n    related_links = record.related_links #=> Array of Primo related links\r\n\r\nSearch has some methods for setting search params\r\n\r\n    search = Exlibris::Primo::Search.new(:base_url => \"http://primo.institution.edu\",\r\n      :institution => \"INSTITUTION\")\r\n    search.isbn_is \"0143039008\" #=> Equivalent to search.add_query_term \"0143039008\", \"isbn\", \"exact\"\r\n    search.title_begins_with \"Travels\" #=> Equivalent to search.add_query_term \"Travels\", \"title\", \"begins_with\"\r\n    search.creator_contains \"Greene\" #=> Equivalent to search.add_query_term \"Greene\", \"creator\", \"contains\"\r\n\r\nSearch can take a record id the initial hash\r\n\r\n    search = Exlibris::Primo::Search.new(:base_url => \"http://primo.institution.edu\",\r\n      :institution => \"INSTITUTION\", :record_id => \"aleph0123456789\")\r\n\r\nSearch can also be chained using the ! version of the attribute writer\r\n\r\n    search = Exlibris::Primo::Search.new.base_url!(\"http://primo.institution.edu\").\r\n      institution!(\"INSTITUTION\").record_id!(\"aleph0123456789\")\r\n\r\nOr\r\n\r\n    search = Exlibris::Primo::Search.new.base_url!(\"http://primo.institution.edu\").\r\n      institution!(\"INSTITUTION\").title_begins_with(\"Travels\").\r\n        creator_contains(\"Greene\").genre_is(\"Book\")\r\n\r\n## Exlibris::Primo::Config\r\nExlibris::Primo::Config allows you to specify global configuration parameter for Exlibris::Primo\r\n\r\n    Exlibris::Primo.configure do |config|\r\n      config.base_url = \"http://primo.institution.edu\"\r\n      config.institution = \"INSTITUTION\"\r\n      config.libraries = { \"LIB_CODE1\" => \"Library Decoded 1\", \"LIB_CODE2\" => \"Library Decoded 2\",\r\n        \"LIB_CODE3\" => \"Library Decoded 3\" }\r\n    end\r\n\r\nExlibris::Primo::Config can also read in from a YAML file that specifies the various config elements\r\n\r\n    Exlibris::Primo.configure do |config|\r\n      config.load_yaml \"./config/primo.yml\"\r\n    end\r\n\r\n## Exlibris::Primo::EShelf\r\nThe Exlibris::Primo::EShelf class provides methods for reading a given user's Primo eshelf \r\nand eshelf structure as well as adding and removing records.\r\n\r\n## Example of Exlibris::Primo::EShelf in action\r\n    eshelf = Exlibris::Primo::EShelf.new(:user_id => \"USER_ID\",\r\n      :base_url => \"http://primo.institution.edu\", :insitution => \"INSTITUTION\")\r\n    records = eshelf.records\r\n    size = eshelf.size\r\n    basket_id = eshelf.basket_id\r\n    eshelf.add_records([\"PrimoRecordId\",\"PrimoRecordId2\"], basket_id)\r\n\r\n## Exlibris::Primo::Reviews\r\nThe Exlibris::Primo::Reviews class provides methods for reading a given user's Primo reviews \r\nfeatures.\r\n\r\n## Example of Exlibris::Primo::Reviews in action\r\n    reviews = Exlibris::Primo::Reviews.new(:record_id => \"aleph0123456789\", :user_id => \"USER_ID\",\r\n      :base_url => \"http://primo.institution.edu\", :insitution => \"INSTITUTION\")\r\n    user_record_reviews = reviews.reviews #=> Array of Primo reviews\r\n\r\n## Exlibris::Primo::Tags\r\nThe Exlibris::Primo::Tags class provides methods for reading a given user's Primo tags \r\nfeatures.\r\n\r\n## Example of Exlibris::Primo::Tags in action\r\n    tags = Exlibris::Primo::Tags.new(:record_id => \"aleph0123456789\", :user_id => \"USER_ID\",\r\n      :base_url => \"http://primo.institution.edu\", :insitution => \"INSTITUTION\")\r\n    user_record_tags = tags.tags #=> Array of Primo tags\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Exlibris-primo"}